const express = require('express');
const db = require('../db');

const router = express.Router();

// ‚úÖ Ajouter une performance
router.post('/add', async (req, res) => {
    try {
        const { username, total, completed, in_progress, cancelled, progress } = req.body;

        console.log("üì• Donn√©es re√ßues :", req.body); // Debug des donn√©es re√ßues

        // V√©rifier si l'intervenant existe
        const [userExists] = await db.query("SELECT id FROM intervenant WHERE id = ?", [username]);

        console.log("üîç R√©sultat de la v√©rification de l'intervenant :", userExists);

        if (userExists.length === 0) {
            return res.status(400).json({ error: "L'intervenant sp√©cifi√© n'existe pas." });
        }

        // Ins√©rer les donn√©es dans la table `performance`
        await db.query(`
            INSERT INTO performance (username, total, completed, in_progress, cancelled, progress)
            VALUES (?, ?, ?, ?, ?, ?)
        `, [username, total, completed, in_progress, cancelled, progress]);

        console.log("‚úÖ Performance ajout√©e avec succ√®s !");
        res.status(201).json({ message: "Performance ajout√©e avec succ√®s." });

    } catch (error) {
        console.error("‚ùå Erreur MySQL :", error);
        res.status(500).json({ error: "Erreur lors de l'ajout de la performance", details: error.sqlMessage });
    }
});


// ‚úÖ R√©cup√©rer toutes les performances
router.get('/all', async (req, res) => {
    try {
        const [performances] = await db.query("SELECT * FROM performance ORDER BY progress DESC");

        if (performances.length === 0) {
            return res.status(404).json({ message: "Aucune performance trouv√©e." });
        }

        res.json(performances);
    } catch (error) {
        console.error("Erreur MySQL :", error);
        res.status(500).json({ error: "Erreur lors de la r√©cup√©ration des performances", details: error.sqlMessage });
    }
});

// ‚úÖ R√©cup√©rer la performance d'un individu sp√©cifique
router.get('/performanceduninter/:id', async (req, res) => {
    const { id } = req.params;

    try {
        const [performance] = await db.query("SELECT * FROM performance WHERE id = ?", [id]);

        if (performance.length === 0) {
            return res.status(404).json({ error: "Aucune performance trouv√©e pour cet intervenant." });
        }

        res.json(performance[0]);
    } catch (error) {
        console.error("Erreur MySQL :", error);
        res.status(500).json({ error: "Erreur lors de la r√©cup√©ration de la performance", details: error.sqlMessage });
    }
});

module.exports = router;
